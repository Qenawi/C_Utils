// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.2.50'

    repositories {
        google()
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        mavenCentral()

    }
}
ext {
    supportLibrayVersion = '27.1.0'
    constraintLayoutVersion = '1.0.2'
    configuration = [

            package          : "com.app.mvvm_model",
            compileSdkVersion:27,
            targetSdkVersion : 28,
            minSdkVersion    : 26,
            buildToolsVersion: "27.0.2",
    ]



    supportDependencies = [

            design          : "com.android.support:design:${supportLibrayVersion}",
            appcompat       : "com.android.support:appcompat-v7:${supportLibrayVersion}",
            cardview        : "com.android.support:cardview-v7:${supportLibrayVersion}",
            recyclerview    : "com.android.support:recyclerview-v7:${supportLibrayVersion}",
            constraintLayout: "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}"

    ]

    GoogleLifeCycleVersion = '1.1.0'

    GoogleLifeArchDependancies = [

            runtime  : "android.arch.lifecycle:runtime:${GoogleLifeCycleVersion}",
            extension: "android.arch.lifecycle:extensions:${GoogleLifeCycleVersion}",
            compiler : "android.arch.lifecycle:compiler:${GoogleLifeCycleVersion}"
    ]

    RoomDependancies = [

            runtime  : "android.arch.persistence.room:runtime:${GoogleLifeCycleVersion}",
            compiler : "android.arch.persistence.room:compiler:${GoogleLifeCycleVersion}",
            rxAdapter: "android.arch.persistence.room:rxjava2:${GoogleLifeCycleVersion}"
    ]

    retrofitRxVersion = '2.2.0'
    retrofitVersion = '2.3.0'
    retrofitConverterVersion = '2.3.0'
    okhttpVersion = '3.8.0'

    squareDependencies =
            [
            retrofit       : "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            adapter_rx_java: "com.squareup.retrofit2:adapter-rxjava2:${retrofitRxVersion}",
            converter_gson : "com.squareup.retrofit2:converter-gson:${retrofitConverterVersion}",
            okHttp         : "com.squareup.okhttp3:okhttp:${okhttpVersion}",
            okHttpLoging   : "com.squareup.okhttp3:logging-interceptor:${okhttpVersion}"
             ]

    rxandroidVersion = '2.0.1'
    rxjavaVersion = '2.1.5'

    reactiveDependencies = [
            rxandroid: "io.reactivex.rxjava2:rxandroid:${rxandroidVersion}",
            rxjava   : "io.reactivex.rxjava2:rxjava:${rxjavaVersion}"]

    timberVersion = '4.5.1'

    timberDependencies = [
            timber: "com.jakewharton.timber:timber:${timberVersion}"
    ]

    butterKnifeVersion = '8.8.1'

    butterKnifeDependacies = [
            butterKnife        : "com.jakewharton:butterknife:${butterKnifeVersion}",
            butterKnifeCompiler: "com.jakewharton:butterknife-compiler:${butterKnifeVersion}"]


    dependcyInjectionVersion = '2.12'

    injectionDependencies = [
            dagger2               : "com.google.dagger:dagger:${dependcyInjectionVersion}",
            dagger2Android        : "com.google.dagger:dagger-android:${dependcyInjectionVersion}",
            dagger2AndroidSupport : "com.google.dagger:dagger-android-support:${dependcyInjectionVersion}",
            dagger2Compiler       : "com.google.dagger:dagger-compiler:${dependcyInjectionVersion}",
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:${dependcyInjectionVersion}",
            glassfish             : "org.glassfish:javax.annotation:10.0-b28"
    ]

    junitVersion = '4.12'
    mockitoVersion = '1.10.19'
    robolectricVersion = '3.0'
    hamcrestVersion = '1.3'

    testingDependencies = [
            junit      : "junit:junit:${junitVersion}",
            mockito    : "org.mockito:mockito-core:${mockitoVersion}",
            robolectric: "org.robolectric:robolectric:${robolectricVersion}",
            hamcrest   : "org.hamcrest:hamcrest-all:${hamcrestVersion}"
    ]

    leakcanaryVersion = '1.5.4'
    stethoVersion = '1.5.0'
    multidexVersion='1.0.3'
    developerDependancies = [
            multidex:"com.android.support:multidex:${multidexVersion}",
            stetho           : "com.facebook.stetho:stetho:${stethoVersion}",
            stethoOkHttp     : "com.facebook.stetho:stetho-okhttp3:${stethoVersion}",
            leakCanaryDebug  : "com.squareup.leakcanary:leakcanary-android:${leakcanaryVersion}",
            leakCanaryRelease: "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanaryVersion}",
            leakCanaryTest   : "com.squareup.leakcanary:leakcanary-android-no-op:${leakcanaryVersion}"
    ]

    GlideVersion='4.5.0'
    glideDependancies=
            [
                    glide:"com.github.bumptech.glide:glide:${GlideVersion}",
                    glideAndroidProcessor:"com.github.bumptech.glide:compiler:${GlideVersion}"

            ]


    androidyoutubeplayerVersion='8.0.1'
    androidyoutubeplayerDependancies =
            [

                    androidyoutubeplayer :"com.pierfrancescosoffritti.androidyoutubeplayer:core:${androidyoutubeplayerVersion}"

            ]


}

task clean(type: Delete) {
    delete rootProject.buildDir
}
